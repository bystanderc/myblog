<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chen.dao.UserDtoMapper">
    <resultMap id="BaseResultMap" type="chen.dto.UserDto">
        <constructor>
            <idArg column="userId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="userType" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="image" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    userId, userType, username, password, image
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from blog_user
        where userId = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_user
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="chen.dto.UserDto">
    insert into blog_user (userId, userType, username,
      password, image)
    values (#{userId,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="chen.entity.User">
        insert into blog_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                userId,
            </if>
            <if test="userType != null">
                userType,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="image != null">
                image,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="chen.entity.User">
        update blog_user
        <set>
            <if test="userType != null">
                userType = #{userType,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
        </set>
        where userId = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="chen.entity.User">
    update blog_user
    set userType = #{userType,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>

    <select id="getUserByUser" parameterType="chen.entity.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_user
        where username = #{username}
        and password = #{password}
    </select>

    <select id="checkUserName" parameterType="string" resultType="java.lang.Integer">
    select count(1)
    from blog_user
    where username = #{username}
  </select>

    <select id="selectAllUsers" resultType="chen.entity.User">
        select
        <include refid="Base_Column_List" />
        from blog_user
    </select>
</mapper>